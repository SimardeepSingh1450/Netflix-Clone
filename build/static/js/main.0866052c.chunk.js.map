{"version":3,"sources":["axios_2.js","Row.js","requests_1.js","Banner_3.js","nav_4.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","base_url2","base_url","Row","_ref","title","fetchUrl","isLargeRow","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","useEffect","_fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","request","wrap","_context","prev","next","get","sent","console","log","data","results","abrupt","stop","apply","this","arguments","fetchData","react_default","createElement","className","map","movie","key","id","concat","src","poster_path","backdrop_path","alt","name","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner_3","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","index_es","icon","faPlay","marginRight","faLayerGroup","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","nav_4","src_Banner_3","src_Row","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0866052c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//We use axios to make HTTP Requests.\r\n/*Base url to make requests to the movie database */\r\nconst instance=axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\"\r\n    //timeout:#in milliseconds\r\n    //headers:#..\r\n});\r\n\r\n/*This below is a GET Request:\r\nA GET Request is basically a way to grab data from a data source with the help of the internet.\r\nImportant Point-> It is done using the GET request method , which is very common HTTP request method(like POST,PUT,or DELETE)\r\n\r\nExample of this GET method is :\r\n\r\nsay we type -> instance.get('/foo-bar');\r\n\r\nThen we get our baseURL as -> https://api.themoviedb.org/3/foo-bar\r\nwe got the baseURL changed because of that -> instance.get('/whatever written').\r\n\r\nThis is a simple GET method Explanation.\r\n\r\nSummary:\r\nThe instance.get() appends it's ''(single quote text) to the baseURL.\r\n*/\r\n\r\n\r\nexport default instance;//SPECIAL NOTE-> We can have only one default export at a time for a file.\r\n//SPECIAL NOTE-> When we use the export default then when we import it in another file we can use it's name whatever as we wish , we imported instance with the name ->axios in the Row.js file but still the Row.js file would pick up the variable instance for work.","//TIP TO START->Use the snippet rfce\r\n\r\n\r\nimport React ,{useEffect, useState} from 'react';\r\n\r\n\r\nimport axios from './axios_2';\r\nimport \"./Row.css\";\r\n\r\n\r\nconst base_url2=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Netflix_2015_N_logo.svg/1200px-Netflix_2015_N_logo.svg.png\";\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\";//Images for posters source\r\n\r\n\r\n//Here below in the title,fetchUrl we used props destructuring\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n    const [movies,setMovies]=useState([]);//useState Hook used.\r\n    \r\n    \r\n    \r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request=await axios.get(fetchUrl);//This axios.get appends the requests URL to base URL i.e firstly baseURL then requests URL. \r\n            //console.log(request);\r\n            console.log(request.data.results);\r\n            setMovies(request.data.results);//This request .data.results is the array of movies.\r\n            return request;//In this return request with API Linked to base URL , to see what data is returned to us, see console with inspect and then under data then under results see what data is returned from the API Request or we can say we can see this API Request result in our console also as we used the ->console.log(request).\r\n            //We can also write -> console.log(request.data.results) to see the results as mentioned in above line with ease in our console tab.\r\n        }\r\n        fetchData();\r\n    },[fetchUrl]);//If we are putting [] in [](dependency list) ,because then this useEffect line of code runs only once when the row loads.\r\n  //SPECIAL NOTE->Whenever we are using any  variable inside useEffect which is passed from outside the {} of useEffect then we put that variable inside the dependency list[] because our useEffect is dependent on that variable.\r\n  \r\n \r\n // console.log(movies);Used this line of code to see if movies variable now has movies array or not.\r\n    \r\n        \r\n  return (\r\n    <div className=\"row\">\r\n        {/*title->Here put NETFLIX ORIGINALS ,trending,etc*/}\r\n        <h2>{title}</h2>\r\n        \r\n        <div className=\"row_posters\">\r\n            \r\n        {/*Several row posters inside this */}\r\n        {movies.map(movie=>(\r\n            [\r\n            <img key={movie.id}  className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} src={`${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`}  alt={movie.name}/>,//NOTE->In this line of code we used key property which is a speciality of React to load large amount of media at a faster rate.\r\n            <div><img className={`row_poster ${\"row_posterLarge2\"}`} src={`${base_url2}`} alt={movie.name}/>\r\n            </div>            \r\n            ]\r\n            ))}\r\n        </div>\r\n        \r\n        \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;","const API_KEY=\"a73a1ca9228705c652878a6834f27787\";\r\n\r\nconst requests={\r\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n\r\n}\r\n/*Info about these above URL's:\r\n1.These above links before API KEY are the endings of a URL.\r\n2.We are linking these ends of url with api_key wherever these links were asking for it.\r\n3.At the end the genres are the genre ID's of netflix.\r\n*/\r\nexport default requests;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport { faLayerGroup } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport axios from './axios_2';\r\nimport requests from './requests_1';\r\nimport \"./Banner.css\"\r\n\r\nfunction Banner_3() {\r\n    const[movie,setMovie]=useState([]);\r\n\r\nuseEffect(()=>{\r\n    async function fetchData(){\r\n        const request = await axios.get(requests.fetchTrending);\r\n        setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length-1)]);\r\n        return request;\r\n    }\r\n    fetchData();\r\n},[]);\r\n\r\nconsole.log(movie);\r\n\r\n\r\n  return (\r\n    <header className=\"banner\"\r\n    style ={{\r\n        backgroundSize:\"cover\",\r\n        backgroundImage:`url(\r\n            \"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\r\n            \r\n        backgroundPosition:\"center center\"\r\n\r\n    }}\r\n    >\r\n        <div className=\"banner_contents\">\r\n\r\n        {/*title*/}\r\n        <h1 className=\"banner_title\">\r\n            {movie.title||movie.name||movie.original_name}\r\n        </h1>\r\n        {/*div with 2 buttons*/}\r\n        <div className=\"banner_buttons\">\r\n            <button className=\"banner_button\"><FontAwesomeIcon icon={faPlay} style={{marginRight:'15px'}} />Play</button>\r\n            <button className=\"banner_button\"><FontAwesomeIcon icon={faLayerGroup} style={{marginRight:'15px'}} />My List</button>\r\n        </div>\r\n\r\n        {/*Description*/}\r\n        <h1 className=\"banner_description\">\r\n            {movie.overview}\r\n        </h1>\r\n        \r\n\r\n        </div>\r\n        <div className=\"banner--fadeBottom\"/>\r\n    </header>\r\n     \r\n  )\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Banner_3;","import React,{useEffect,useState} from 'react';\r\nimport './Nav.css';\r\nfunction Nav() {\r\n    const [show,handleShow]=useState(false);\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY>100){\r\n                handleShow(true);\r\n            }else handleShow(false);\r\n        });\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\",()=>{});\r\n        };\r\n\r\n    },[]);\r\n\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n        <img className=\"nav_logo\" \r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1198px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Netflix Logo\"\r\n        />\r\n       \r\n       <img className=\"nav_avatar\" \r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"avatar\"\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport Row from './Row';\nimport \"./App.css\";\nimport requests from './requests_1';\nimport Banner from'./Banner_3';\nimport Nav from './nav_4';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav/>\n      < Banner />\n     <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true}/>\n     <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n     <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n     <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n     <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n     <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n     <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n     <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n     \n     \n    </div>\n  );\n}\n\nexport default App;\n//Special NoTE-> The JS Component Files names must start with a CAPITAL Letter just for convention and the JS module files must start with small letter.","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}